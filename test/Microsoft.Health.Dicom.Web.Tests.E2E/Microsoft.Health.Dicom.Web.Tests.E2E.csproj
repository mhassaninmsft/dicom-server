<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <IncludeContentInPack>false</IncludeContentInPack>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Ensure.That" Version="10.1.0" />
    <PackageReference Include="fo-dicom" Version="$(FoDicomVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.TestHost" Version="$(SdkPackageVersion)" />
    <PackageReference Include="Microsoft.Azure.Functions.Extensions" Version="1.1.0" />
    <PackageReference Include="Microsoft.Health.Api" Version="$(HealthcareSharedPackageVersion)" />
    <PackageReference Include="Microsoft.Health.Client" Version="$(HealthcareSharedPackageVersion)" />
    <PackageReference Include="Microsoft.IO.RecyclableMemoryStream" Version="2.2.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.1.0" />
    <PackageReference Include="System.Linq.Async" Version="6.0.1" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Api\Microsoft.Health.Dicom.Api.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Client\Microsoft.Health.Dicom.Client.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Core\Microsoft.Health.Dicom.Core.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Functions\Microsoft.Health.Dicom.Functions.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Tests.Common\Microsoft.Health.Dicom.Tests.Common.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Health.Dicom.Web\Microsoft.Health.Dicom.Web.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="TestFiles\**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="xunit.runner.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\testauthenvironment.json" Link="testauthenvironment.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Include="Rest\WorkItemTransactionTests.*.cs">
      <DependentUpon>Rest\WorkItemTransactionTests.cs</DependentUpon>
    </None>
  </ItemGroup>

  <Target Name="VerifyExactSdkVersion" BeforeTargets="Build">
    <!--
      Verify that the we are compiling with the exact version of the SDK that is specified in the global.json file.
      If the version specified in the file is not installed on the system, dotnet uses the latest installed version instead.
      We want to avoid that behavior because new SDK versions by default target the runtime version it is released with,
      so the runtime behavior could be different depending on what SDK versions were installed on the machine that compiled
      the code.
    -->
    <PropertyGroup>
      <GlobalJsonPath>$([MSBuild]::GetPathOfFileAbove(global.json))</GlobalJsonPath>
      <GlobalJsonContent>$([System.IO.File]::ReadAllText($(GlobalJsonPath)))</GlobalJsonContent>
      <ParsedSdkVersion><![CDATA[$([System.Text.RegularExpressions.Regex]::Match($(GlobalJsonContent), '"version"\s*:\s*"(\d+.\d+.\d+)"').Groups[1].Value)]]></ParsedSdkVersion>
    </PropertyGroup>
  </Target>

  <Target Name="AddRuntimeConfigFileToBuiltProjectOutputGroupOutput" Condition=" '$(GenerateRuntimeConfigurationFiles)' == 'true'" BeforeTargets="BuiltProjectOutputGroup">
    <ItemGroup>
      <BuiltProjectOutputGroupOutput Include="$(ProjectRuntimeConfigFilePath)" FinalOutputPath="$(ProjectRuntimeConfigFilePath)" />
    </ItemGroup>
  </Target>

</Project>
