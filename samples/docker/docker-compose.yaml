version: "3"
services:
  dicom-api:
    build:
      context: ./../../
      dockerfile: ./src/Microsoft.Health.Dicom.Web/Dockerfile
    restart: always
    environment:
      DicomServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=DICOM;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      BlobStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
    ports:
      - "8080:8080"
    depends_on:
      - sql
      - azurite

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.14.3@sha256:a9f79c01d9ef44549af22935345b5f622d45bef01c771f25a0c87c893b49f978
    restart: always
    # # Uncomment if you want to expose azure storage explorer against localhost
    ports:
      - "10001:10001"
      - "10000:10000"
      - "10002:10002"

  sql:
    build:
      context: ./../../
      dockerfile: ./docker/sql/Dockerfile
    restart: always
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    # # Uncomment if you want to expose sql management studio against localhost
    ports:
      - "1433:1433"
    healthcheck:
        test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
        interval: 10s
        timeout: 10s
        retries: 6

  # deploy optional component dicom-cast
  dicom-cast:
    build:
      context: ./../../
      dockerfile: ./converter/dicom-cast/build/docker/Dockerfile
    environment:
      TableStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;TableEndpoint=http://azurite:10002/devstoreaccount1;"
      Fhir__Endpoint: http://fhir:8080
      DicomWeb__endpoint: http://dicom-api:8080
      DicomCastWorker__PollInterval: "00:00:05"
      Logging__Console__IncludeScopes: "true"
    depends_on:
      - dicom-api
      - azurite
      - fhir
    restart: always

  # deploy fhir server for dicom-cast
  fhir:
    image: healthplatformregistry.azurecr.io/r4_fhir-server:release
    restart: always
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      DataStore: "SqlServer"
    ports:
     - "8081:8080"
    depends_on:
      - sql
